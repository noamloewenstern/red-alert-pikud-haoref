x-bot-env-vars: &bot-env-vars # all apps need these
  NODE_ENV: ${NODE_ENV:-production}
  LOG_LEVEL: ${LOG_LEVEL:-info}

  PB_URL: ${PB_URL:-}
  ADMIN_EMAIL: ${ADMIN_EMAIL:-}
  ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}

  # only for typegen
  PB_TYPEGEN_EMAIL: ${PB_TYPEGEN_EMAIL:-}
  PB_TYPEGEN_PASSWORD: ${PB_TYPEGEN_PASSWORD:-}
  PB_TYPEGEN_URL: ${PB_TYPEGEN_URL:-}

  # clean-db
  PRUNE_ALERT_TIMESPAN_MINUTES: ${PRUNE_ALERT_TIMESPAN_MINUTES:-5}
  DELETE_PER_ITERATION: ${DELETE_PER_ITERATION:-100}

  # alerts-listener
  TELEGRAM_API_ID: ${TELEGRAM_API_ID:-}
  TELEGRAM_API_HASH: ${TELEGRAM_API_HASH:-}
  TELEGRAM_SESSION_STRING: ${TELEGRAM_SESSION_STRING:-}
  TELEGRAM_ALERTS_CHANNEL_ID: ${TELEGRAM_ALERTS_CHANNEL_ID:-}

  # bot
  BOT_TOKEN: ${BOT_TOKEN:-}
  WEBHOOK_DOMAIN: ${WEBHOOK_DOMAIN:-}
  WEBHOOK_PORT: ${WEBHOOK_PORT:-80}
  # WEBHOOK_SECRET_TOKEN: ${WEBHOOK_SECRET_TOKEN:-}
  AUTHOR: ${AUTHOR:-}

x-webapp-env-vars: &webapp-env-vars # webapp
  PORT: ${PORT:-80}

services:
  clean-db:
    image: ghcr.io/noamloewenstern/red-alert-bot/apps:${IMAGE_VERSION}
    environment:
      <<: *bot-env-vars
      PACKAGE: clean-db
      COMMAND: start

  alerts-listener:
    image: ghcr.io/noamloewenstern/red-alert-bot/apps:${IMAGE_VERSION}
    build:
      context: $PWD
      dockerfile: Dockerfile
      target: build-apps
    environment:
      <<: *bot-env-vars
      PACKAGE: listener
      COMMAND: start
    restart: unless-stopped

  bot:
    image: ghcr.io/noamloewenstern/red-alert-bot/apps:${IMAGE_VERSION}
    environment:
      PACKAGE: bot
      COMMAND: start
      <<: *bot-env-vars
    ports:
      - ${WEBHOOK_PORT}:${WEBHOOK_PORT:-80}
    restart: unless-stopped

  webapp-server:
    image: ghcr.io/noamloewenstern/red-alert-bot/apps:${IMAGE_VERSION}
    environment:
      <<: *bot-env-vars
      PACKAGE: webapp-server
      COMMAND: start
      PORT: ${WEBAPP_SERVER_PORT:-8081}
    restart: unless-stopped

  webapp:
    image: ghcr.io/noamloewenstern/red-alert-bot/webapp:${IMAGE_VERSION}
    depends_on:
      - webapp-server
    environment:
      <<: *webapp-env-vars
      CADDY_BACKEND_URL: http://webapp-server:${WEBAPP_SERVER_PORT:-8081}
      WEBAPP_PORT: ${WEBAPP_PORT:-8082}
    ports:
      - ${WEBAPP_PORT:-8082}:${WEBAPP_PORT:-8082}
    restart: unless-stopped

  pb:
    image: ghcr.io/noamloewenstern/red-alert-bot/pocketbase:${IMAGE_VERSION}
    command: ['/pb/pocketbase', 'serve', '--http=0.0.0.0:${POCKETBASE_PORT}']
    ports:
      - '${POCKETBASE_PORT}:${POCKETBASE_PORT:-8080}'
    volumes:
      - $PWD/services/pocketbase/data:/pb/pb_data
      - $PWD/services/pocketbase/pb_migrations:/pb/pb_migrations
    restart: unless-stopped
